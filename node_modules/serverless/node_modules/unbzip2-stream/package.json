{
  "name": "unbzip2-stream",
  "version": "1.0.10",
  "description": "streaming unbzip2 implementatio in pure javascript for node and browsers",
  "keywords": [
    "bzip",
    "bzip2",
    "bz2",
    "stream",
    "streaming",
    "decompress",
    "through"
  ],
  "scripts": {
    "prepublish": "rm test/fixtures/vmlinux.bin* ||  exit 0",
    "browser-test": "browserify -t brfs test/simple.js | tape-run2 -b phantomjs",
    "prepare-long-test": "dd if=/dev/urandom of=test/fixtures/vmlinux.bin bs=5m count=2 && cat test/fixtures/vmlinux.bin | bzip2 > test/fixtures/vmlinux.bin.bz2",
    "long-test": "tape test/extra/long.js",
    "download-test": "beefy test/browser/long.js --open -- -t brfs",
    "test": "tape test/*.js"
  },
  "author": {
    "name": "Jan BÃ¶lsche",
    "email": "jan@lagomorph.de"
  },
  "repository": {
    "url": "git+https://github.com/regular/unbzip2-stream.git",
    "type": "git"
  },
  "bugs": {
    "url": "https://github.com/regular/unbzip2-stream/issues"
  },
  "main": "index.js",
  "devDependencies": {
    "browserify": "^8.1.0",
    "tape": "^3.4.0",
    "concat-stream": "^1.4.7",
    "tape-run2": "^1.0.3",
    "brfs": "^1.2.0",
    "throughout": "0.0.0",
    "beefy": "^2.1.2"
  },
  "dependencies": {
    "through": "^2.3.6",
    "buffer": "^3.0.1"
  },
  "license": "MIT",
  "readme": "[![npm version](https://badge.fury.io/js/unbzip2-stream.svg)](http://badge.fury.io/js/unbzip2-stream)\n\nunbzip2-stream\n===\nstreaming bzip2 compresser in pure JS for Node and browserify.\n\nBuffers\n---\nWhen browserified, the stream emits instances of [feross/buffer](https://github.com/feross/buffer) instead of raw Uint8Arrays to have a consistant API across browsers and Node.\n\nUsage\n---\n``` js\nvar bz2 = require('unbzip2-stream');\nvar fs = require('fs');\n\n// decompress test.bz2 and output the result\nfs.createReadStream('./test.bz2').pipe(bz2()).pipe(process.stdout);\n```\n\nAlso see [test/browser/download.js](https://github.com/regular/unbzip2-stream/blob/master/test/browser/download.js) for an example of decompressing a file while downloading.\n\nTests\n---\nTo run tests in Node:\n\n    npm run test\n\nTo run tests in PhantomJS\n\n    npm run browser-test\n\nAdditional Tests\n----------------\nThere are two more tests that specifically test decompression of a very large file. Because I don't want to include large binary files in this repository, the files are created by running an npm script.\n\n    npm run prepare-long-test\n\nYou can now\n\n    npm run long-test\n\nAnd to run a test in chrome that downloads and decompresses a large binary file\n\n    npm run download-test\n\nOpen the browser's console to see the output.\n\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/regular/unbzip2-stream#readme",
  "_id": "unbzip2-stream@1.0.10",
  "_shasum": "b21f7555f9bb1055891f35a61b8af8c377ff51bc",
  "_resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.0.10.tgz",
  "_from": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.0.10.tgz"
}
